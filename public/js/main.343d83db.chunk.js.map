{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepare-events.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeletEventFab.js","components/calendar/CalendarScreen.js","components/router/PublicRoute.js","components/router/PrivateRoute.js","components/router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","initialSate","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","user","checkingFinish","logout","eventLogout","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rName","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","dispatch","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","autoFocus","autoComplete","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","Navbar","useSelector","onClick","clear","CalendarEvent","title","uiOpenModal","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventDeleted","eventLoaded","eventUpdated","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","rows","AddNewFab","DeletEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","bordeRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.343d83db.chunk.js","sourcesContent":["/** @format */\r\n\r\nexport const types = {\r\n\tuiOpenModal: '[UI] Open Modal',\r\n\tuiCloseModal: '[UI] Close Modal',\r\n\r\n\teventLogout: '[Event] Event Logout',\r\n\teventAddNew: '[Event] Add New',\r\n\teventSetActive: '[Event] Set Active',\r\n\teventStartAddNew: '[Event] Start add new',\r\n\teventClearActiveEvent: '[Event] Clear Active Event',\r\n\teventUpdated: '[Event] Event Updated',\r\n\teventDeleted: '[Event] Event Deleted',\r\n\teventLoaded: '[Event] Events loaded',\r\n\r\n\tauthChecking: '[Auth] Checking Login State',\r\n\tauthCheckingFinish: '[Auth] Fishin Login State',\r\n\tauthStartLogin: '[Auth] Start Login State',\r\n\tauthLogin: '[Auth] Login',\r\n\tauthStartRegister: '[Auth] Start Regsiter',\r\n\tauthStartTokenRenew: '[Auth] Start token renew',\r\n\tauthLogout: '[Auth] Logout',\r\n};\r\n","/** @format */\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\tmodalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.uiOpenModal:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalOpen: true,\r\n\t\t\t};\r\n\r\n\t\tcase types.uiCloseModal:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalOpen: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","/** @format */\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialSate = {\r\n\tevents: [],\r\n\tactiveEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialSate, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.eventSetActive:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveEvent: action.payload,\r\n\t\t\t};\r\n\t\t// Agregar un evento\r\n\t\tcase types.eventAddNew:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents: [...state.events, action.payload],\r\n\t\t\t};\r\n\r\n\t\tcase types.eventClearActiveEvent:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveEvent: null,\r\n\t\t\t};\r\n\t\t// Actualizar un evento\r\n\t\tcase types.eventUpdated:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents: state.events.map((e) =>\r\n\t\t\t\t\te.id === action.payload.id ? action.payload : e\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t// Borrar un evento\r\n\t\tcase types.eventDeleted:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n\t\t\t\tactiveEvent: null,\r\n\t\t\t};\r\n\r\n\t\tcase types.eventLoaded:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tevents: [...action.payload],\r\n\t\t\t};\r\n\r\n\t\tcase types.eventLogout:\r\n\t\t\treturn {\r\n\t\t\t\t...initialSate,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","/** @format */\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\tchecking: true,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.authLogin:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tchecking: false,\r\n\t\t\t};\r\n\r\n\t\tcase types.authCheckingFinish:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tchecking: false,\r\n\t\t\t};\r\n\r\n\t\tcase types.authLogout:\r\n\t\t\treturn {\r\n\t\t\t\tchecking: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","/** @format */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tui: uiReducer,\r\n\tcalendar: calendarReducer,\r\n\tauth: authReducer,\r\n});\r\n","/** @format */\r\n\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers =\r\n\t(typeof window !== 'undefined' &&\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n\tcompose;\r\n\r\nexport const store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers(applyMiddleware(thunk))\r\n);\r\n","/** @format */\r\n\r\nimport { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\tconst [values, setValues] = useState(initialState);\r\n\r\n\tconst reset = () => {\r\n\t\tsetValues(initialState);\r\n\t};\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n\t\tsetValues({\r\n\t\t\t...values,\r\n\t\t\t[target.name]: target.value,\r\n\t\t});\r\n\t};\r\n\r\n\treturn [values, handleInputChange, reset];\r\n};\r\n","/** @format */\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\tconst url = `${baseUrl}/${endpoint}`;\r\n\tif (method === 'GET') {\r\n\t\treturn fetch(url);\r\n\t} else {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: method,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n\tconst url = `${baseUrl}/${endpoint}`;\r\n\tconst token = localStorage.getItem('token') || '';\r\n\tif (method === 'GET') {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod,\r\n\t\t\theaders: {\r\n\t\t\t\t'x-token': token,\r\n\t\t\t},\r\n\t\t});\r\n\t} else {\r\n\t\treturn fetch(url, {\r\n\t\t\tmethod: method,\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t'x-token': token,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t});\r\n\t}\r\n};\r\n","/** @format */\r\nimport { fetchSinToken, fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = (email, password) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n\t\tconst body = await resp.json();\r\n\r\n\t\tif (body.ok) {\r\n\t\t\tlocalStorage.setItem('token', body.token);\r\n\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuid: body.uid,\r\n\t\t\t\t\tname: body.name,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\treturn async (dispatch) => {\r\n\t\tconst resp = await fetchSinToken(\r\n\t\t\t'auth/new',\r\n\t\t\t{ email, password, name },\r\n\t\t\t'POST'\r\n\t\t);\r\n\t\tconst body = await resp.json();\r\n\r\n\t\tif (body.ok) {\r\n\t\t\tlocalStorage.setItem('token', body.token);\r\n\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuid: body.uid,\r\n\t\t\t\t\tname: body.name,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const startChecking = () => {\r\n\treturn async (dispatch) => {\r\n\t\tconst resp = await fetchConToken('auth/renew');\r\n\t\tconst body = await resp.json();\r\n\r\n\t\tif (body.ok) {\r\n\t\t\tlocalStorage.setItem('token', body.token);\r\n\t\t\tlocalStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tlogin({\r\n\t\t\t\t\tuid: body.uid,\r\n\t\t\t\t\tname: body.name,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdispatch(checkingFinish());\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst login = (user) => ({\r\n\ttype: types.authLogin,\r\n\tpayload: user,\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n\ttype: types.authCheckingFinish,\r\n});\r\n\r\nexport const startLogout = () => {\r\n\treturn (dispatch) => {\r\n\t\tlocalStorage.clear();\r\n\t\tdispatch(eventLogout());\r\n\t\tdispatch(logout());\r\n\t};\r\n};\r\n\r\nconst logout = () => ({\r\n\ttype: types.authLogout,\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n\ttype: types.eventLogout,\r\n});\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\tconst [formLoginValues, handleLoginInputChange] = useForm({\r\n\t\tlEmail: '',\r\n\t\tlPassword: '',\r\n\t});\r\n\r\n\tconst { lEmail, lPassword } = formLoginValues;\r\n\r\n\tconst [formRegisterValues, handleRegisterInputChange] = useForm({\r\n\t\trEmail: '',\r\n\t\trName: '',\r\n\t\trPassword1: '',\r\n\t\trPassword2: '',\r\n\t});\r\n\r\n\tconst { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLogin = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(startLogin(lEmail, lPassword));\r\n\t};\r\n\r\n\tconst handleRegister = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (rPassword1 !== rPassword2) {\r\n\t\t\tSwal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n\t\t}\r\n\t\tdispatch(startRegister(rEmail, rPassword1, rName));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='container login-container'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-6 login-form-1'>\r\n\t\t\t\t\t<h3>Ingreso</h3>\r\n\t\t\t\t\t<form onSubmit={handleLogin}>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tplaceholder='Correo'\r\n\t\t\t\t\t\t\t\tname='lEmail'\r\n\t\t\t\t\t\t\t\tvalue={lEmail}\r\n\t\t\t\t\t\t\t\tonChange={handleLoginInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tplaceholder='Contraseña'\r\n\t\t\t\t\t\t\t\tname='lPassword'\r\n\t\t\t\t\t\t\t\tvalue={lPassword}\r\n\t\t\t\t\t\t\t\tonChange={handleLoginInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input type='submit' className='btnSubmit' value='Login' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='col-md-6 login-form-2'>\r\n\t\t\t\t\t<h3>Registro</h3>\r\n\t\t\t\t\t<form onSubmit={handleRegister}>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tplaceholder='Nombre'\r\n\t\t\t\t\t\t\t\tname='rName'\r\n\t\t\t\t\t\t\t\tvalue={rName}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tplaceholder='Correo'\r\n\t\t\t\t\t\t\t\tname='rEmail'\r\n\t\t\t\t\t\t\t\tvalue={rEmail}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tplaceholder='Contraseña'\r\n\t\t\t\t\t\t\t\tname='rPassword1'\r\n\t\t\t\t\t\t\t\tvalue={rPassword1}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\tplaceholder='Repita la contraseña'\r\n\t\t\t\t\t\t\t\tname='rPassword2'\r\n\t\t\t\t\t\t\t\tvalue={rPassword2}\r\n\t\t\t\t\t\t\t\tonChange={handleRegisterInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<input type='submit' className='btnSubmit' value='Crear cuenta' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nexport const messages = {\r\n\tallDay: 'Todo el día',\r\n\tprevious: '<',\r\n\tnext: '>',\r\n\ttoday: 'Hoy',\r\n\tmonth: 'Mes',\r\n\tweek: 'Semana',\r\n\tday: 'Día',\r\n\tagenda: 'Agenda',\r\n\tdate: 'Fecha',\r\n\ttime: 'Hora',\r\n\tevent: 'Evento',\r\n\tnoEventsInRange: 'No hay eventos en este rango',\r\n\tshowMore: (total) => `+ Ver más (${total})`,\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\tconst { name } = useSelector((state) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLogout = () => {\r\n\t\tdispatch(startLogout());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='navbar navbar-dark bg-dark mb-4'>\r\n\t\t\t<span className='navbar-brand'>{name}</span>\r\n\t\t\t<button onClick={handleLogout} className='btn btn-outline-danger'>\r\n\t\t\t\t<i className='fas fa-sign-out-alt'></i>\r\n\t\t\t\t<span> Salir</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\tconst { title, user } = event;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span> {title} </span>\r\n\t\t\t<strong> - {user?.name} </strong>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n\ttype: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n\ttype: types.uiCloseModal,\r\n});\r\n","/** @format */\r\nimport moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\treturn events.map((e) => ({\r\n\t\t...e,\r\n\t\tend: moment(e.end).toDate(),\r\n\t\tstart: moment(e.start).toDate(),\r\n\t}));\r\n};\r\n","/** @format */\r\n\r\nimport { types } from '../types/types';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepare-events';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst { uid, name } = getState().auth;\r\n\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken('events', event, 'POST');\r\n\t\t\tconst body = await resp.json();\r\n\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tevent.id = body.evento.id;\r\n\t\t\t\tevent.user = {\r\n\t\t\t\t\t_id: uid,\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t};\r\n\t\t\t\tdispatch(eventAddNew(event));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n\ttype: types.eventAddNew,\r\n\tpayload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n\ttype: types.eventSetActive,\r\n\tpayload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n\ttype: types.eventClearActiveEvent,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst { id } = getState().calendar.activeEvent;\r\n\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n\t\t\tconst body = await resp.json();\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tdispatch(eventDeleted());\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n\ttype: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken('events');\r\n\t\t\tconst body = await resp.json();\r\n\t\t\tconst events = prepareEvents(body.eventos);\r\n\t\t\tdispatch(eventLoaded(events));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n\ttype: types.eventLoaded,\r\n\tpayload: events,\r\n});\r\n\r\nexport const eventStartUpdated = (event) => {\r\n\treturn async (dispatch) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n\t\t\tconst body = await resp.json();\r\n\t\t\tif (body.ok) {\r\n\t\t\t\tdispatch(eventUpdated(event));\r\n\t\t\t} else {\r\n\t\t\t\tSwal.fire('Error', body.msg, 'error');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst eventUpdated = (event) => ({\r\n\ttype: types.eventUpdated,\r\n\tpayload: event,\r\n});\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {\r\n\teventStartAddNew,\r\n\teventClearActiveEvent,\r\n\teventStartUpdated,\r\n} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n\tcontent: {\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tright: 'auto',\r\n\t\tbottom: 'auto',\r\n\t\tmarginRight: '-50%',\r\n\t\ttransform: 'translate(-50%, -50%)',\r\n\t},\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hour');\r\nconst nowPlus1 = now.clone().add(1, 'hour');\r\n\r\nconst initEvent = {\r\n\ttitle: '',\r\n\tnotes: '',\r\n\tstart: now.toDate(),\r\n\tend: nowPlus1.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { modalOpen } = useSelector((state) => state.ui);\r\n\tconst { activeEvent } = useSelector((state) => state.calendar);\r\n\tconst [dateStart, setDateStart] = useState(now.toDate());\r\n\tconst [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\tconst [titleValid, setTitleValid] = useState(true);\r\n\tconst [formValues, setFormValues] = useState(initEvent);\r\n\tconst { title, notes, start, end } = formValues;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (activeEvent) {\r\n\t\t\tsetFormValues(activeEvent);\r\n\t\t} else {\r\n\t\t\tsetFormValues(initEvent);\r\n\t\t}\r\n\t}, [activeEvent, setFormValues]);\r\n\r\n\tconst handleInputChange = ({ target }) => {\r\n\t\tsetFormValues({\r\n\t\t\t...formValues,\r\n\t\t\t[target.name]: target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tdispatch(uiCloseModal());\r\n\t\tdispatch(eventClearActiveEvent());\r\n\t\tsetFormValues(initEvent);\r\n\t};\r\n\r\n\tconst handleStartDateChange = (e) => {\r\n\t\tsetDateStart(e);\r\n\t\tsetFormValues({\r\n\t\t\t...formValues,\r\n\t\t\tstart: e,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleEndDateChange = (e) => {\r\n\t\tsetDateEnd(e);\r\n\t\tsetFormValues({\r\n\t\t\t...formValues,\r\n\t\t\tend: e,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSubmitForm = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst momentStart = moment(start);\r\n\t\tconst momentEnd = moment(end);\r\n\t\tif (momentStart.isSameOrAfter(momentEnd)) {\r\n\t\t\tSwal.fire(\r\n\t\t\t\t'Error',\r\n\t\t\t\t'La fecha fin debe de ser mayor a la fecha de inicio',\r\n\t\t\t\t'error'\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (title.trim().length < 2) {\r\n\t\t\tsetTitleValid(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (activeEvent) {\r\n\t\t\tdispatch(eventStartUpdated(formValues));\r\n\t\t} else {\r\n\t\t\tdispatch(eventStartAddNew(formValues));\r\n\t\t}\r\n\t\tsetTitleValid(true);\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tisOpen={modalOpen}\r\n\t\t\tonRequestClose={closeModal}\r\n\t\t\tstyle={customStyles}\r\n\t\t\tcloseTimeoutMS={200}\r\n\t\t\tclassName='modal'\r\n\t\t\toverlayClassName='modal-fondo'\r\n\t\t>\r\n\t\t\t<h1> {activeEvent ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n\t\t\t<hr />\r\n\t\t\t<form className='container' onSubmit={handleSubmitForm}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label>Fecha y hora inicio</label>\r\n\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\tonChange={handleStartDateChange}\r\n\t\t\t\t\t\tvalue={dateStart}\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label>Fecha y hora fin</label>\r\n\t\t\t\t\t<DateTimePicker\r\n\t\t\t\t\t\tonChange={handleEndDateChange}\r\n\t\t\t\t\t\tvalue={dateEnd}\r\n\t\t\t\t\t\tminDate={dateStart}\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label>Titulo y notas</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName={`form-control ${!titleValid && 'is-invalid'}`}\r\n\t\t\t\t\t\tplaceholder='Título del evento'\r\n\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small id='emailHelp' className='form-text text-muted'>\r\n\t\t\t\t\t\tUna descripción corta\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tplaceholder='Notas'\r\n\t\t\t\t\t\trows='5'\r\n\t\t\t\t\t\tname='notes'\r\n\t\t\t\t\t\tvalue={notes}\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<small id='emailHelp' className='form-text text-muted'>\r\n\t\t\t\t\t\tInformación adicional\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<button type='submit' className='btn btn-outline-primary btn-block'>\r\n\t\t\t\t\t<i className='far fa-save'></i>\r\n\t\t\t\t\t<span> Guardar</span>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleClickNew = () => {\r\n\t\tdispatch(uiOpenModal());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button className='btn btn-primary fab' onClick={handleClickNew}>\r\n\t\t\t<i className='fas fa-plus'></i>\r\n\t\t</button>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeletEventFab = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleDelete = () => {\r\n\t\tdispatch(eventStartDelete());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName='btn btn-danger fab-danger animate__animated animate__fadeInLeft'\r\n\t\t\tonClick={handleDelete}\r\n\t\t>\r\n\t\t\t<i className='fas fa-trash'></i>\r\n\t\t\t<span> Borrar Evento</span>\r\n\t\t</button>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport {\r\n\teventSetActive,\r\n\teventClearActiveEvent,\r\n\teventStartLoading,\r\n} from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeletEventFab } from '../ui/DeletEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [lastView, setLastView] = useState(\r\n\t\tlocalStorage.getItem('lastView') || 'month'\r\n\t);\r\n\tconst { events, activeEvent } = useSelector((state) => state.calendar);\r\n\tconst { uid } = useSelector((state) => state.auth);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(eventStartLoading());\r\n\t}, [dispatch]);\r\n\r\n\tconst onDoubleClick = (e) => {\r\n\t\tdispatch(uiOpenModal());\r\n\t};\r\n\r\n\tconst onSelectEvent = (e) => {\r\n\t\tdispatch(eventSetActive(e));\r\n\t};\r\n\r\n\tconst onViewChange = (e) => {\r\n\t\tsetLastView(e);\r\n\t\tlocalStorage.setItem('lastView', e);\r\n\t};\r\n\r\n\tconst onSelectSlot = (e) => {\r\n\t\tdispatch(eventClearActiveEvent());\r\n\t};\r\n\r\n\tconst eventStyleGetter = (event, start, end, isSelected) => {\r\n\t\tconst style = {\r\n\t\t\tbackgroundColor: uid === event.user?._id ? '#367cf7' : '#465660',\r\n\t\t\tbordeRadius: '0px',\r\n\t\t\topacity: 0.8,\r\n\t\t\tdisplay: 'block',\r\n\t\t\tcolor: 'white',\r\n\t\t};\r\n\t\treturn {\r\n\t\t\tstyle,\r\n\t\t};\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='calendar-screen'>\r\n\t\t\t<Navbar />\r\n\t\t\t<Calendar\r\n\t\t\t\tlocalizer={localizer}\r\n\t\t\t\tevents={events}\r\n\t\t\t\tstartAccessor='start'\r\n\t\t\t\tendAccessor='end'\r\n\t\t\t\tmessages={messages}\r\n\t\t\t\teventPropGetter={eventStyleGetter}\r\n\t\t\t\tonDoubleClickEvent={onDoubleClick}\r\n\t\t\t\tonSelectEvent={onSelectEvent}\r\n\t\t\t\tonView={onViewChange}\r\n\t\t\t\tonSelectSlot={onSelectSlot}\r\n\t\t\t\tselectable={true}\r\n\t\t\t\tview={lastView}\r\n\t\t\t\tcomponents={{\r\n\t\t\t\t\tevent: CalendarEvent,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t\t<AddNewFab />\r\n\t\t\t{activeEvent && <DeletEventFab />}\r\n\t\t\t<CalendarModal />\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n\tisAuthenticated,\r\n\tcomponent: Component,\r\n\t...rest\r\n}) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\tcomponent={(props) =>\r\n\t\t\t\tisAuthenticated ? <Redirect to='/' /> : <Component {...props} />\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n\tisAuthenticated: PropTypes.bool.isRequired,\r\n\tcomponent: PropTypes.func.isRequired,\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n\tisAuthenticated,\r\n\tcomponent: Component,\r\n\t...rest\r\n}) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\tcomponent={(props) =>\r\n\t\t\t\tisAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n\tisAuthenticated: PropTypes.bool.isRequired,\r\n\tcomponent: PropTypes.func.isRequired,\r\n};\r\n","/** @format */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { checking, uid } = useSelector((state) => state.auth);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startChecking());\r\n\t}, [dispatch]);\r\n\r\n\tif (checking) {\r\n\t\treturn <h5>Espere...</h5>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<PublicRoute\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath='/login'\r\n\t\t\t\t\t\tcomponent={LoginScreen}\r\n\t\t\t\t\t\tisAuthenticated={!!uid}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath='/'\r\n\t\t\t\t\t\tcomponent={CalendarScreen}\r\n\t\t\t\t\t\tisAuthenticated={!!uid}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Redirect to='/' />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n};\r\n","/** @format */\r\n\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './components/router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<AppRouter />;\r\n\t\t</Provider>\r\n\t);\r\n};\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}